@startuml
abstract class AbstractEntity<E extends Serializable>{
}

class Movie {
    + Movie(Integer id, String title)
    - Integer id
    - String title
    + Integer getId()
    + void setId(int id)
    + String getTitle()
    + void setTitle(String title)
    + String toString()
}
class Show {
    + Show(Integer id, Movie movie, String showtime, int availableSeats)
    - Integer id
    - Movie movie
    - String showtime
    - int availableSeats
    + Integer getId()
    + void setId(int id)
    + Movie getMovie()
    + void setMovie(Movie movie)
    + String getShowtime()
    + void setShowtime(String showtime)
    + int getAvailableSeats()
    + void setAvailableSeats(int availableSeats)
    + String toString()
}

interface Identifiable<E extends Serializable>{
    + E getId();
}
interface MovieRepository {
    + Movie findMovieById(int id);

    + Movie findMovieByTitle(String title);

    + List<Movie> findAllMovies();
}
interface ShowRepository {
    + Show findShowById(int id);

    + Show findShowByMovie(Movie movie);

    + List<Show> findAllShows();
}
class MovieRepositoryImp{
    - static instance
    - static final List<Movie> STATE
    + static synchronized MovieRepository getInstance()
    + synchronized Movie findMovieById(int id)
    + synchronized Movie findMovieByTitle(String title)
    + synchronized List<Movie> findAllMovies()
}
class ShowRepositoryImp{
    - static instance
    - static final List<Show> STATE
    + static synchronized MovieRepository getInstance()
    + synchronized Show findShowByMovie(Movie movie)
    + synchronized List<Show> findAllShows()
}
class Main{
    - static final MovieRepository MOVIE_REPOSITORY
    - static final ShowRepository SHOW_REPOSITORY
    + static main(String... args[])
    - void disp()
}

Identifiable<|..AbstractEntity
MovieRepository<|--MovieRepositoryImp
ShowRepository<|--ShowRepositoryImp

Main*--MovieRepository
Main*--ShowRepository

Show ||--|| Movie
AbstractEntity<|-- Show
AbstractEntity <|-- Movie
@enduml